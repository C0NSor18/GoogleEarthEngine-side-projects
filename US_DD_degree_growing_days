/**********************************************************************
*  Calculate US DD - degree growing days from gridmet temperature data
***********************************************************************/

var countries = ee.FeatureCollection('ft:1tdSwUL7MVpOauSgRzqVTOwdfy17KDbw-1d9omPw');
var usa = countries.filter(ee.Filter.eq('Country', 'United States'));

var yearlist = [1980, 1981, 1982]
//var yearlist = ee.List.sequence(1980, 2016);

// Convert Kelvin to Fahrenheit. Fahrenheit = Kelvin × 9/5 - 459.67
var my_kel_fahr = function(img){
    return img.multiply(9/5).subtract(459.67).copyProperties(img, ['system:time_start','system:time_end']); 
};

// Convert image collection to multi-band image.
var my_multiband = function(collection){  
  var cat = function(a, b) {
    return ee.Image(b).addBands(a);
  };
  var multiband = ee.Image(collection.slice(1).iterate(cat, collection.get(0)));
  return multiband;
};

// Calculate growing degree days from gridmet temperature data.
var my_gdd_yearlist = function(yearlist){
  // Load gridmet data.
  var gridmet = ee.ImageCollection('IDAHO_EPSCOR/GRIDMET')
    .filterDate(yearlist+'-01-01', (yearlist+1)+'-01-01');
  
  // Calculate mean minTemperature per month at the pixel level.
  // Daily minTemperature, convert to Fahrenheit.
  var tmmn = gridmet.select("tmmn");
  tmmn = tmmn.map(my_kel_fahr);
  
  // Calculate mean maxTemperature per month at the pixel level.
  // Daily maxTemperature, convert to Fahrenheit.
  var tmmx = gridmet.select("tmmx");
  tmmx = tmmx.map(my_kel_fahr);
  
  // Cumulative GDD is a running total of GDD from April 1 through October 31.
  // GDD = ((Tmax + Tmin)/2) - Tbase // Tbase 10°C = 283.15K#
  // Excel-Equivalent  =((SUM((IF(B37<=86;B37;86)+(IF(D37>=50;D37;50))))/2)-50)
  
  // "Normalize" min/max for GDD calculation.
  var tmmx_86 = tmmx.map(function(img){
    return img
      .where(img.gt(86), ee.Image(86))
      .where(img.lt(50), ee.Image(50));
  });
  
  var tmmn_50 = tmmn.map(function(img){
    return img
      .where(img.lt(50), ee.Image(50))
      .where(img.gt(86), ee.Image(86));
  });
  
  // Join collections for calculation.
  // make the filter.
  var filterTimeEq = ee.Filter.equals({
    leftField:'system:time_start', 
    rightField: 'system:time_start'
  });
  // make the join.
  var innerJoin = ee.Join.inner();
  // apply the join and filter, outputs feature collection.
  var joined_minmax = innerJoin.apply(tmmx_86, tmmn_50, filterTimeEq);
  
  // convert back to an image collection and calculate DD
  var gdd = ee.ImageCollection(
    joined_minmax.map(function(feature) {
      var primary = ee.Image(feature.get('primary'));
      var secondary = ee.Image(feature.get('secondary'));
      
      return ((primary.add(secondary)).divide(2)).subtract(50)
        .copyProperties(primary, ['system:index', 'system:time_start','system:time_end']);
    })
    // rename bands because join copys tmmx values.
  ).select(['tmmx'], ['gdd']);
  
  
  /**********************************************************************
  *                       Visualize Gridmed / GDD                        
  ***********************************************************************/
  /*
  // Print Timeseries.
  print(Chart.image.series(gdd.filterDate('2015-01-01', '2016-01-01'), 
    vineyardFrancesca, ee.Reducer.mean(), 100)); //scale hier imer anpassen, möglichst groß für weniger rechenzeit, geom=300 
  */
  
  /*
  // Visualize daily map.
  Map.addLayer(ee.Image(
    ee.ImageCollection('IDAHO_EPSCOR/GRIDMET')
      .filterDate('2015-01-01', '2016-01-01')
      .select("gdd")
      .toList(1000)
    ).get(1), {min: 70, max: 80, gamma: 1.7},'tmmn');
  */
  
  //Visualize monthly map.
  var year_gdd = ee.Image(gdd
    .filterDate(yearlist+'-04-01', (yearlist+1)+'-10-01')
    .reduce(ee.Reducer.sum())
    );
  
  //Map.addLayer(year_gdd, {min: 1500, max: 4500},'gdd sum');
  
  var year_gdd_intervalls =
    '<RasterSymbolizer>' +
      '<ColorMap  type="intervals" extended="false" >' +
        '<ColorMapEntry color="#008000" quantity="2500" label="under2500"/>' +
        '<ColorMapEntry color="#5def7d" quantity="3000" label="2501–3000"/>' +
        '<ColorMapEntry color="#FFFF00" quantity="3500" label="3001–3500"/>' +
        '<ColorMapEntry color="#F0A804" quantity="4000" label="3501–4000" />' +
        '<ColorMapEntry color="#FF0000" quantity="10000" label="over4000" />' +
      '</ColorMap>' +
    '</RasterSymbolizer>';
  
  //Map.addLayer(niccdc.sldStyle(sld_ramp), {}, 'niccdc', false)
  Map.addLayer(year_gdd.sldStyle(year_gdd_intervalls), {}, '' + yearlist);
}

yearlist.map(my_gdd_yearlist)
Map.centerObject(usa, 4)